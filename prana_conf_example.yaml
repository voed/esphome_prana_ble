substitutions:
  name: prana
  device_description: "Monitor and control a Parana Recuperator via bluetooth"
  external_components_source: github://voed/prana_ble@master
  mac_address_01: 00:A0:50:00:00:00
  mac_address_02: 00:A0:50:00:00:01
   
esphome:
  friendly_name: Prana
  name: ${name}
  comment: ${device_description}
  
esp32:
  board: esp32dev
  framework: # Strongly recommended to use IDF framework instead of arduino. 
    type: esp-idf

external_components:
  - source: ${external_components_source}
    components: [prana_ble] 
    refresh: 0s
    
# Enable logging
logger:
  level: DEBUG

# Enable Home Assistant API
api:
  encryption:
    key: <your key>

ota:
  platform: esphome
  password: <your password>

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "Prana Fallback Hotspot"
    password: !secret wifi_password

# MAC address can be obtained via "BLE Scanner" app on your smartphone or BLE Client Tracker component

# Enables scanning of Bluetooth (BLE) devices via ESP32. To determine the MAC address
# esp32_ble_tracker:
# text_sensor:
#   - platform: ble_scanner
#     name: "BLE Devices Scanner"
    
# TODO: try to merge it with "prana_ble"
# TODO: make option to add by device name?
ble_client:
  - mac_address: ${mac_address_01}
    id: prana
#You can use multiple devices by specifying their MACS and ids
  - mac_address: ${mac_address_02}
    id: prana2

prana_ble:
  - id: prana_client
    ble_client_id: prana
  - id: prana_client2
    ble_client_id: prana2

sensor:
  - platform: prana_ble
    prana_ble_id: prana_client

#temperature sensors
    temperature_inside_inlet: # top left sensor in Prana app
      name: "Temperature inside inlet" 
    temperature_inside_outlet: # bottom left sensor in Prana app
      name: "Temperature inside outlet" 
    temperature_outside_inlet:  # top right sensor in Prana app
      name: "Temperature outside inlet"
    temperature_outside_outlet: # bottom right sensor in Prana app
      name: "Temperature outside outlet"

    co2:
      name: "CO2"
    pressure:
      name: "Pressure"
    humidity:
      name: "Humidity"
    tvoc:
      name: "TVOC"
      
# voltage and frequency sensors seems only available for old devices with 220V fans
    voltage:
      name: "Voltage"
    frequency:
      name: "Frequency"
      
switch:
  - platform: prana_ble
    prana_ble_id: prana_client
    connect: # Switch to turn off BLE connection between recuperator and ESP32. Useful if you want to connect from native smartphone app
      name: Bluetooth connect
      restore_mode: ALWAYS_ON
    enable: # turn on/off the device
      name: Enable
    heating: # turn on/off internal heating element
      name: Heating
    winter_mode:  # turn on/off "winter" mode
      name: Winter mode
    fan_lock:
      name: Fan lock

# TODO: make this more readable
fan:
  - platform: prana_ble
    prana_ble_id: prana_client
    has_auto: true #if your recuperator does not have auto/auto+ options, change this to false
    name: In/Out fans # use fan_lock switch to control separate fans
    fan_type: BOTH

  - platform: prana_ble
    prana_ble_id: prana_client
    has_auto: true
    name: Inlet fan
    fan_type: INLET

  - platform: prana_ble
    prana_ble_id: prana_client
    has_auto: true
    name: Outlet fan
    fan_type: OUTLET

number:
  - platform: prana_ble
    prana_ble_id: prana_client
    name: Display brightness

